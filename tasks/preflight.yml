---
- name: Substrate Prelim | RedHat Redendecies install
  block:
    - name: Substrate RedHat | Install selinux python packages [RHEL]
      package:
        name:
          - "{{ ( (ansible_facts.distribution_major_version | int) < 8) | ternary('libselinux-python','python3-libselinux') }}"
          - "{{ ( (ansible_facts.distribution_major_version | int) < 8) | ternary('policycoreutils-python','python3-policycoreutils') }}"
        state: present
      register: _install_selinux_packages
      until: _install_selinux_packages is success
      retries: 5
      delay: 2

    - name: Substrate RedHat | Configure SELinux for substrate node
      ansible.posix.seboolean:
        name: "{{  }}"
        state: true
        persistent: true
  when:
    - substrate_node_selinux_enabled
    - substrate_node_group != 'root'
    - ansible_os_family == 'RedHat'

- name: Substrate Prelim | RedHat Redendecies install
  block:
    - name: Substrate SELinux | Install selinux python packages [Fedora]
      package:
        name:
          - "{{ ( (ansible_facts.distribution_major_version | int) < 29) | ternary('libselinux-python','python3-libselinux') }}"
          - "{{ ( (ansible_facts.distribution_major_version | int) < 29) | ternary('policycoreutils-python','python3-policycoreutils') }}"
        state: present
      register: _install_selinux_packages
      until: _install_selinux_packages is success
      retries: 5
      delay: 2
  when:
    - ansible_os_family == 'Debian'
    - substrate_node_selinux_enabled

- name: Substrate User | Add system group
  ansible.builtin.group:
    name: "{{ substrate_node_group }}"
    system: true
    state: present
  when: substrate_node_group != "root"

- name: Substrate User | Add user
  ansible.builtin.user:
    name: "{{ substrate_node_user }}"
    state: present
    groups:
      - "{{ substrate_node_group }}"
      - "adm"
  when: substrate_node_user != "root"

- name: Substrate User | Adjust permissions for data dir
  ansible.builtin.file:
    path: "{{ substrate_node_data_dir }}"
    state: directory
    owner: "{{ substrate_node_user }}"
    group: "{{ substrate_node_group }}"
    mode: "0744"
    recurse: true

- name: Substrate Logrotate | Setup logrotate
  block:
    - name: Substrate Logrotate | Install logrotate (Alpine Linux)
      ansible.builtin.package:
        name: logrotate
        state: present

    - name: Substrate Logrotate | Set up logrotate (SLES)
      block:
        - name: Substrate Logrotate | Configure logrotate repository (SLES)
          zypper_repository:
            repo: https://download.opensuse.org/repositories/openSUSE:Leap:42.1/standard/openSUSE:Leap:42.1.repo

        - name: Substrate Logrotate | Install Logrotate (SLES)
          zypper:
            name: logrotate
            state: present
      when: ansible_facts['os_family'] == "Suse"

    - name: Substrate Logrotate | Create logrotate config
      template:
        src: logrotate.j2
        dest: "/etc/logrotate.d/{{ substrate_node_bin_name }}"
        owner: root
        group: root
        mode: "0644"
  when:
    - substrate_node_logrotate_conf_enable | bool
    - substrate_node_logging | lower == "file"
