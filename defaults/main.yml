---
substrate_node_preflight: true
substrate_node_install: true
substrate_node_configure: true
substrate_node_postflight: true
substrate_node_operations: true
# example: substrate_node_version: 'latest'
substrate_node_version: "latest"
substrate_node_repository: "digitalnativeinc/standard-substrate"
substrate_node_source:
  "https://github.com/{{ substrate_node_repository }}/releases/download/\
  {{ substrate_node_latest_version | default(substrate_node_version) }}/\
  {{ substrate_node_bin_name }}-{{ ansible_system | lower }}-{{ ansible_architecture }}"
substrate_node_releases: "https://api.github.com/repos/{{ substrate_node_repository }}/releases/latest"
substrate_node_selinux_enabled: false
substrate_node_bin_dir: "/usr/local/bin/"
substrate_node_bin_name: "opportunity-standalone"
substrate_node_configuration:
  substrate_node_friendly_name: "Standard Validator"
  # example: role: "Validator" | "Collator" | "RPC"
  role: "Validator"
  bootnodes: null
  chain: "opportunity"
  data_dir: "/data"
  node_key: null
  # example: pruning: "archive" | "constrained"
  pruning: null
  # example: identity: "alice" | "bob" | "charlie" | "dave" | "eve" | "ferdie" | "one" | "two" | "dev"
  identity: null
  prometheus_port: 9615
  prometheus_disable: false
  prometheus_external: false
  p2p_port: 30333
  rpc_port: 9933
  rpc_external: false
  ws_port: 9944
  ws_external: false
  # example: rpc_cors: "localhost,https://polkadot.js.org" | "all"
  rpc_cors: null
  # example: rpc_methods: "Safe" | "Unsafe" | "Auto"
  rpc_methods: "Auto"
  # modules: "afg, babe, telemetry, txpool, usage, db, gossip, peerset, state-db, state-trace, sub-libp2p, trie, wasm-executor, wasm-heap"
  # levels: "error, warn, info, debug, trace"
  # example: log_level: "info, telemetry=debug, trie=warn"
  log_level: null

substrate_node_collator_configuration:
  chain: null
  bootnodes: null
  p2p_port: null
  ws_port: null
  collator_flag: false
  parachain_id: null

# substrate_node_logging: "syslog" | "file"
substrate_node_logging: "syslog"
substrate_node_user: "standard"
substrate_node_group: "{{ substrate_node_user }}"
# substrate_node_restart: "always" | "on-failure"
substrate_node_restart: "always"
substrate_node_logrotate_conf_enable: true
substrate_node_logrotate_conf:
  paths:
    - "/var/log/{{ substrate_node_bin_name }}/*.log"
  options:
    - daily
    - missingok
    - rotate 14
    - compress
    - delaycompress
    - notifempty
    - create 0644 {{ substrate_node_user }} adm
    - sharedscripts

# INTERNAL VARIABLES
_substrate_node_bin_path: "{{ substrate_node_bin_dir }}{{ substrate_node_bin_name }}"
_node_key_file: /data/node-key
