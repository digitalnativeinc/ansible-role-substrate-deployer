---
- name: Substrate Configure | Create log directory
  ansible.builtin.file:
    path: "/var/log/{{ substrate_node_bin_name }}"
    state: directory
    owner: "{{ substrate_node_user }}"
    group: adm
    mode: "0640"
  when: substrate_node_logging == 'file'

- name: Substrate Configure | Systemd Template file
  template:
    src: ./templates/substrate-node.service.j2
    dest: "/etc/systemd/system/{{ substrate_node_bin_name }}.service"
    owner: "{{ substrate_node_user }}"
    group: "{{ substrate_node_group }}"
    mode: "0644"
  register: node_startup

- name: Substrate Configure | Rotate logs before
  command: "logrotate -f /etc/logrotate.d/{{ substrate_node_bin_name }}"
  when: (node_startup.changed or release_install.changed) | bool and
    (substrate_node_logrotate_conf_enable | bool and substrate_node_logging == "file")

- name: Substrate Configure | Service start
  ansible.builtin.systemd:
    name: "{{ substrate_node_bin_name }}"
    daemon_reload: true
    # state: started
    state: "{{ node_startup.changed or release_install.changed | ternary('restarted', 'started') }}"
    enabled: true
  register: node_start

- name: Substrate Configure | Wait for service start/restart
  pause:
    seconds: 10
  when: node_start.changed

- block:
    - name: Substrate Configure | Get service invocation ID
      command: "systemctl show -p InvocationID --value {{ substrate_node_bin_name }}"
      register: systemd_status

    - name: Substrate Configure | Get logs
      command: |
        journalctl _SYSTEMD_INVOCATION_ID="{{ systemd_status.stdout }}" + INVOCATION_ID="{{ systemd_status.stdout }}"
      register: service_logs
      ignore_errors: true
      failed_when:
        - 'service_logs.stderr != ""'

    - name: Substrate Configure | Service stdout
      debug:
        msg: "{{ service_logs.stdout }}"
      failed_when:
        - '"Discovered new external address for our node" not in service_logs.stdout'
        - '"error" in service_logs.stdout'
  when: substrate_node_logging == "syslog"

- block:
    - name: Substrate Configure | Output logs
      command: "tail -n 100 {{ item }}"
      with_items:
        - /var/log/{{ substrate_node_bin_name }}/stdout.log
        - /var/log/{{ substrate_node_bin_name }}/stderr.log
      register: service_logs
      failed_when:
        - '"Discovered new external address for our node" not in service_logs.stdout'
        - '"error" in service_logs.stdout'

    - name: Substrate Configure | Get logs
      debug:
        msg: "{{ item.stdout }}"
      with_items: "{{ service_logs['results'] }}"
  when: substrate_node_logging == "file"

- name: Substrate Configure | Verify ports are open
  wait_for:
    port: "{{ item }}"
    timeout: 60
  when:
    - item
  with_items:
    - "{{ substrate_node_p2p_port }}"
    - "{{ substrate_node_rpc_port }}"
    - "{{ substrate_node_ws_port }}"
    - "{{ substrate_node_prometheus_port }}"
